shader(type = fragment);

input(id = 0) vec2 uv;
output(id = 0) vec4 frag_colour;

const uint output_texture = 0;
const uint bloom_texture = 1;

vec3 blur(vec2 uv)
{
	// basic box blur
	const float blur_radius = 6.0f;
	vec2 tex_offset = 1.0f / texsize(bloom_texture);
	vec3 result = vec3(0.0f);

	float count = 0.0f;
	for(float x = -blur_radius; x <= blur_radius; x++)
	{
        for(float y = -blur_radius; y <= blur_radius; y++) {
            vec2 offset = vec2(x, y) * tex_offset;
			result += sample(bloom_texture, uv + offset).rgb * (1.0 - abs(x / blur_radius));
            count += 1.0;
        }
    }

    result /= count; // average the color values	
	return result * 7;
}

void main()
{
	frag_colour = sample(output_texture, uv) + vec4(blur(uv), 0.0f);
}

